global g_ENABLE_MUSIC = true;

global MakeMusicPlayer = function()
{
	local MusicPlayer = 
	{
		song = null,
		lastFile = null,
		fadeThread = null,
	};

	MusicPlayer.Play = function(file, fadeTime)
	{
		.lastFile = file;

		if ( !g_ENABLE_MUSIC ) { return; }

		if (?.fadeThread)
		{
			threadKill(.fadeThread);
			.fadeThread = null;
		}

		// fade out old track
		if ( ?.song )
		{
			._FadeOutTrack( .song, fadeTime );
		}

		.song = Sound( file, true, true );
		.song.Play();
		.song.SetVolume(0.0f);

		._FadeInTrack(.song, fadeTime);
	};

	MusicPlayer.FadeOut = function(fadeTime)
	{
		if ( !?.song || !g_ENABLE_MUSIC ) { return; }

		._FadeOutTrack(.song, fadeTime);
		.song = null;
	};

	MusicPlayer._FadeOutTrack = function( track, fadeTime )
	{
		if( !?fadeTime ) { fadeTime = 1.0f; }

		if (?.fadeThread)
		{
			threadKill(.fadeThread);
			.fadeThread = null;
		}

		fork id
		{
			local volume = track.GetVolume();
			local volumeStep = g_dt/fadeTime;

			while( volume >= 0.0f )
			{
				volume -= volumeStep;
				track.SetVolume(volume);
				yield();
			}

			track.Stop();
			track = null;
		}

		.fadeThread = id;
	};

	MusicPlayer._FadeInTrack = function( track, fadeTime )
	{
		if( !?fadeTime ) { fadeTime = 1.0f; }

		if (?.fadeThread)
		{
			threadKill(.fadeThread);
			.fadeThread = null;
		}

		fork
		{
			local volume = 0.0f;
			local volumeStep = g_dt/fadeTime;

			while( volume < 1.0f )
			{
				volume += volumeStep;
				track.SetVolume(volume);
				yield();
			}
		}
	};

	MusicPlayer.Init = function()
	{	
	};

	MusicPlayer.Release = function()
	{
		if ( ?.song ) { .song.Stop(); }
		.song = null;

		threadKill(.threadId);
	};
	
	MusicPlayer.Init();
	return MusicPlayer;
};